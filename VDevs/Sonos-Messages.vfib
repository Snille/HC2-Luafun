{"name":"Living-Room","type":"virtual_device","properties":{"deviceIcon":1005,"currentIcon":"1005","log":"","logTemp":"","mainLoop":"","visible":"true","rows":[{"type":"button","elements":[{"id":1,"lua":true,"waitForResponse":false,"caption":"Espressomaskin Klar","name":"action1","empty":false,"msg":"--\n-- To use this Device you need the SONOS-HTTP-API installed somewhere.\n-- Read more here: https://github.com/jishi/node-sonos-http-api\n-- Name this device with the same name as the SONOS player you want to play the messages on.\n-- Enter the IP and port of the SONOS-HTTP-API in this device IP and Port.\n--\n\nlocal device = fibaro:getSelfId();\nlocal zonename = fibaro:getName(device); -- Set the name of the device to the same as the SONOS-Device.\nlocal ipaddress = fibaro:getValue(device, \"IPAddress\"); -- Set the IP of the device to the IP of your SONOS-HTTP-API\nlocal port = fibaro:getValue(device, \"TCPPort\");\nlocal volume = tonumber(fibaro:getGlobalValue(\"sonosvolume\")); -- Volume to play message at set in the global variable \"sonosvolume\".\n--local volume = \"\"; -- Enable this and leave empty for current volume.\nlocal lang = \"sv\"; -- Language to play message in.\nlocal message = \"Espressomaskinen är nu varm.\"; -- The message to say.\n\n-- Converts all characters to URL-Safe characters.\nlocal char_to_hex = function(c)\n  return string.format(\"%%%02X\", string.byte(c))\nend\nlocal function urlencode(url)\n  if url == nil then\n    return\n  end\n  url = url:gsub(\"\\n\", \"\\r\\n\")\n  url = url:gsub(\"([^%w ])\", char_to_hex)\n  url = url:gsub(\" \", \"%%20\")\n  return url\nend\n\n-- URL-Encodes the text in the message.\nlocal fixedmess = urlencode(message);\n\n-- Sends it to the SONOS API.\nsonos = Net.FHttp(ipaddress, port);\nresponse = sonos:GET(\"/\" ..zonename.. \"/say/\" ..fixedmess.. \"/\" ..lang.. \"/\" ..volume);\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":2,"lua":true,"waitForResponse":false,"caption":"Diskmaskin Klar","name":"action2","empty":false,"msg":"local device = fibaro:getSelfId();\nlocal zonename = fibaro:getName(device); -- Set the name of the device to the same as the SONOS-Device.\nlocal ipaddress = fibaro:getValue(device, \"IPAddress\"); -- Set the IP of the device to the IP of your SONOS-HTTP-API\nlocal port = fibaro:getValue(device, \"TCPPort\");\nlocal volume = tonumber(fibaro:getGlobalValue(\"sonosvolume\")); -- Volume to play message at set in the global variable \"sonosvolume\".\n--local volume = \"\"; -- Enable this and leave empty for current volume.\nlocal lang = \"sv\"; -- Language to play message in.\nlocal message = \"Diskmaskinen är klar.\"; -- The message to say.\n\n-- Converts all characters to URL-Safe characters.\nlocal char_to_hex = function(c)\n  return string.format(\"%%%02X\", string.byte(c))\nend\nlocal function urlencode(url)\n  if url == nil then\n    return\n  end\n  url = url:gsub(\"\\n\", \"\\r\\n\")\n  url = url:gsub(\"([^%w ])\", char_to_hex)\n  url = url:gsub(\" \", \"%%20\")\n  return url\nend\n\n-- URL-Encodes the text in the message.\nlocal fixedmess = urlencode(message);\n\n-- Sends it to the SONOS API.\nsonos = Net.FHttp(ipaddress, port);\nresponse = sonos:GET(\"/\" ..zonename.. \"/say/\" ..fixedmess.. \"/\" ..lang.. \"/\" ..volume);\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":3,"lua":true,"waitForResponse":false,"caption":"Tvättmaskin Klar","name":"action3","empty":false,"msg":"local device = fibaro:getSelfId();\nlocal zonename = fibaro:getName(device); -- Set the name of the device to the same as the SONOS-Device.\nlocal ipaddress = fibaro:getValue(device, \"IPAddress\"); -- Set the IP of the device to the IP of your SONOS-HTTP-API\nlocal port = fibaro:getValue(device, \"TCPPort\");\nlocal volume = tonumber(fibaro:getGlobalValue(\"sonosvolume\")); -- Volume to play message at set in the global variable \"sonosvolume\".\n--local volume = \"\"; -- Enable this and leave empty for current volume.\nlocal lang = \"sv\"; -- Language to play message in.\nlocal message = \"Tvättmaskinen är klar.\"; -- The message to play (no special characters).\n\n-- Converts all characters to URL-Safe characters.\nlocal char_to_hex = function(c)\n  return string.format(\"%%%02X\", string.byte(c))\nend\nlocal function urlencode(url)\n  if url == nil then\n    return\n  end\n  url = url:gsub(\"\\n\", \"\\r\\n\")\n  url = url:gsub(\"([^%w ])\", char_to_hex)\n  url = url:gsub(\" \", \"%%20\")\n  return url\nend\n\n-- URL-Encodes the text in the message.\nlocal fixedmess = urlencode(message);\n\n-- Sends it to the SONOS API.\nsonos = Net.FHttp(ipaddress, port);\nresponse = sonos:GET(\"/\" ..zonename.. \"/say/\" ..fixedmess.. \"/\" ..lang.. \"/\" ..volume);\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":4,"lua":true,"waitForResponse":false,"caption":"Torkskåp Klart","name":"action4","empty":false,"msg":"local device = fibaro:getSelfId();\nlocal zonename = fibaro:getName(device); -- Set the name of the device to the same as the SONOS-Device.\nlocal ipaddress = fibaro:getValue(device, \"IPAddress\"); -- Set the IP of the device to the IP of your SONOS-HTTP-API\nlocal port = fibaro:getValue(device, \"TCPPort\");\nlocal volume = tonumber(fibaro:getGlobalValue(\"sonosvolume\")); -- Volume to play message at set in the global variable \"sonosvolume\".\n--local volume = \"\"; -- Enable this and leave empty for current volume.\nlocal lang = \"sv\"; -- Language to play message in.\nlocal message = \"Tvätten är torr.\"; -- The message to say.\n\n-- Converts all characters to URL-Safe characters.\nlocal char_to_hex = function(c)\n  return string.format(\"%%%02X\", string.byte(c))\nend\nlocal function urlencode(url)\n  if url == nil then\n    return\n  end\n  url = url:gsub(\"\\n\", \"\\r\\n\")\n  url = url:gsub(\"([^%w ])\", char_to_hex)\n  url = url:gsub(\" \", \"%%20\")\n  return url\nend\n\n-- URL-Encodes the text in the message.\nlocal fixedmess = urlencode(message);\n\n-- Sends it to the SONOS API.\nsonos = Net.FHttp(ipaddress, port);\nresponse = sonos:GET(\"/\" ..zonename.. \"/say/\" ..fixedmess.. \"/\" ..lang.. \"/\" ..volume);\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":5,"lua":true,"waitForResponse":false,"caption":"Kaffebryggare Klar","name":"action5","empty":false,"msg":"local device = fibaro:getSelfId();\nlocal zonename = fibaro:getName(device); -- Set the name of the device to the same as the SONOS-Device.\nlocal ipaddress = fibaro:getValue(device, \"IPAddress\"); -- Set the IP of the device to the IP of your SONOS-HTTP-API\nlocal port = fibaro:getValue(device, \"TCPPort\");\nlocal volume = tonumber(fibaro:getGlobalValue(\"sonosvolume\")); -- Volume to play message at set in the global variable \"sonosvolume\".\n--local volume = \"\"; -- Enable this and leave empty for current volume.\nlocal lang = \"sv\"; -- Language to play message in.\nlocal message = \"Kaffet är klart.\"; -- The message to say.\n\n-- Converts all characters to URL-Safe characters.\nlocal char_to_hex = function(c)\n  return string.format(\"%%%02X\", string.byte(c))\nend\nlocal function urlencode(url)\n  if url == nil then\n    return\n  end\n  url = url:gsub(\"\\n\", \"\\r\\n\")\n  url = url:gsub(\"([^%w ])\", char_to_hex)\n  url = url:gsub(\" \", \"%%20\")\n  return url\nend\n\n-- URL-Encodes the text in the message.\nlocal fixedmess = urlencode(message);\n\n-- Sends it to the SONOS API.\nsonos = Net.FHttp(ipaddress, port);\nresponse = sonos:GET(\"/\" ..zonename.. \"/say/\" ..fixedmess.. \"/\" ..lang.. \"/\" ..volume);\n","buttonIcon":0,"favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}
